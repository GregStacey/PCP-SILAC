
%% Initialize.
% These are hacky fixes.

precision_write_out_counter = di;
Precision_values = desiredPrecision * 100;


%% Write out True interaction and summary lists for precision.

% %Generate headers to write out
% size_interaction_replicates=size(interactions_prep_replicate);
% %Create header for the list of replicate and interactions observed
% for column_counter=1:size_interaction_replicates(2)
%   Column_name1{column_counter}=strcat('Interaction Replicate_',mat2str(column_counter));
% end
% %Create header
% Column_header1=repmat('%s,', 1, size_interaction_replicates(2)+7);
% Interaction_pre_rep_name=strcat(datadir3,'Interactions_across_replicate_',mat2str(Precision_values(precision_write_out_counter)),'pc.csv');
% Inter_pre_rep = fopen(Interaction_pre_rep_name,'w');
% fprintf (Inter_pre_rep,[Column_header1, '\n'],... %header for output
%   'Protein interaction','Center A','Center B',...
%   'Total number of observation of interaction',...
%   'Total number of replicates interaction observed in',Column_name1{:},...
%   'Both proteins in Corum', 'Interaction in Corum'); %Write Header
% for write_out_loop2=1:Total_unique_interactions
%   fprintf(Inter_pre_rep,'%s,',interaction_final.unique_interactions{write_out_loop2,1});
%   fprintf(Inter_pre_rep,'%6.3f,',interaction_final.CenterA{write_out_loop2,1});
%   fprintf(Inter_pre_rep,'%6.3f,',interaction_final.CenterB{write_out_loop2,1});
%   fprintf(Inter_pre_rep,'%6f,',number_observation_pre_interaction(write_out_loop2,1));
%   fprintf(Inter_pre_rep,'%6f,', number_unique_interaction(write_out_loop2,1));
%   fprintf(Inter_pre_rep,'%6f,', interactions_prep_replicate(write_out_loop2,1:end));
%   fprintf(Inter_pre_rep,'%6f,',interaction_final.proteinInCorum{write_out_loop2,1});
%   fprintf(Inter_pre_rep,'%6f,',interaction_final.interactionInCorum{write_out_loop2,1});
%   fprintf(Inter_pre_rep,',\n');
% end
% fclose(Inter_pre_rep);

Final_Results_name=strcat(datadir3,'Summary_Interactions_',mat2str(Precision_values(precision_write_out_counter)),'pc_replicate.csv');
fid_final= fopen(Final_Results_name,'wt'); % create the summary file of the interaction output
fprintf (fid_final,',%s,%s,%s,%s,%s,,,%s\n',... %header for OutputGaus output
  'Recall', 'Precision', 'Number of TP interactions','Number of FP interactions','Number of novel interactions',...
  'Number of possible interactions in CORUM');
fprintf (fid_final,'%s,%6.4f,%6.4f,%6.4f,%6.4f,%6.4f,,,%6.4f,\n',...
  'Assessed with global threshold',final_Recall(1), final_Precision(1), final_TP(1), final_FP(1), ...
  sum(interaction_final.global), all_positives);
fprintf (fid_final,'%s,%6.4f,%6.4f,%6.4f,%6.4f,%6.4f,\n',...
  'Assessed with replicate-specific threshold',final_Recall(2), final_Precision(2), final_TP(2), final_FP(2), ...
  length(interaction_final.global));
if ~isempty(notes)
  fprintf (fid_final,'\n\n\n\n Notes:');
  for ii = 1:length(notes)
    fprintf (fid_final,'\n %s', notes{ii});
  end
end
fclose(fid_final);


% Final interactions list, and channel-specific final interactions
Final_list_Interactionsname=strcat(datadir3,'Final_Interactions_list_',mat2str(Precision_values(precision_write_out_counter)),'_precision.csv');
fid_final_1 = fopen(Final_list_Interactionsname,'w');
fprintf (fid_final_1,'%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,\n',...
  'Unique interactions','Protein A','Protein B','Center A',...
  'Center B','Replicate','Channel','Delta Center','R^2',...
  'Euc. Dist', 'Both proteins in Corum', 'Interaction in Corum','Interaction score',...
  'Score rank (low = better)','Score percentile (low = better)','Precision level',...
  'Global?'); %Write Header
fn = cell(1,length(user.silacratios));
fid = zeros(1,length(user.silacratios));
for ii = 1:length(user.silacratios)
  fn{ii} = strcat(datadir3,'Final_Interactions_list_',user.silacratios{ii},'only_',mat2str(Precision_values(precision_write_out_counter)),'_precision.csv');
  fid(ii) = fopen(fn{ii},'w');
  fprintf (fid(ii),'%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,\n',...
    'Unique interactions','Protein A','Protein B','Center A',...
    'Center B','Replicate','Channel','Delta Center','R^2',...
    'Euc. Dist', 'Both proteins in Corum', 'Interaction in Corum','Interaction score',...
    'Score rank (low = better)','Score percentile (low = better)','Precision level',...
    'Global?'); %Write Header
end
for ix=1:Total_unique_interactions
  fprintf(fid_final_1,'%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%d,%s,%6.4f,%6.4f,%6.4f,%6.4f,\n',...
    interaction_final.unique_interactions{ix},...
    interaction_final.proteinA{ix},...
    interaction_final.proteinB{ix},...
    interaction_final.centerA_formated{ix},...
    interaction_final.centerB_formated{ix},...
    interaction_final.Replicates_formated{ix},...
    interaction_final.channel_formatted{ix},...
    interaction_final.DeltaCenter_formated {ix},...
    interaction_final.R2_formated{ix},...
    interaction_final.DeltaEuc_formated{ix},...
    interaction_final.proteinInCorum(ix),...
    interaction_final.interactionInCorum(ix),...
    interaction_final.scores_formated{ix},...
    interaction_final.scoreRank(ix),...
    interaction_final.scorePrctile(ix),...
    interaction_final.precisionDropout(ix),...
    interaction_final.global(ix));
  
  % channel-specific interactions list
  if length(interaction_final.channel{ix}) == 1
    chan = interaction_final.channel{ix};
    fprintf(fid(chan),'%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%d,%s,%6.4f,%6.4f,%6.4f,%6.4f,\n',...
      interaction_final.unique_interactions{ix},...
      interaction_final.proteinA{ix},...
      interaction_final.proteinB{ix},...
      interaction_final.centerA_formated{ix},...
      interaction_final.centerB_formated{ix},...
      interaction_final.Replicates_formated{ix},...
      interaction_final.channel_formatted{ix},...
      interaction_final.DeltaCenter_formated {ix},...
      interaction_final.R2_formated{ix},...
      interaction_final.DeltaEuc_formated{ix},...
      interaction_final.proteinInCorum(ix),...
      interaction_final.interactionInCorum(ix),...
      interaction_final.scores_formated{ix},...
      interaction_final.scoreRank(ix),...
      interaction_final.scorePrctile(ix),...
      interaction_final.precisionDropout(ix),...
      interaction_final.global(ix));
  end
end
fclose(fid_final_1);


preci = 1;
Final_Results_name=strcat(datadir3,'Precision_across_replicates_',mat2str(Precision_values(precision_write_out_counter)),'GlobalPrecision.csv');
fid_final2= fopen(Final_Results_name,'wt'); % create the summary file of the interaction output
fprintf (fid_final2,'%s,,\n','Assessed with global threshold');
fprintf (fid_final2,'%s,%s,%s,%s,%s,%s,\n',... %header for OutputGaus output
  'Interaction observed in at least N replicates',...
  'Number of FP interactions',...
  'Number of TP interactions',...
  'Number of novel interactions',...
  'Number of total interactions',...
  'Precision %'); %Write Header
for precision_counter=1:(number_of_replicates*number_of_channels)
  fprintf (fid_final2,'%6f,%6f,%6f,%6f,%6f,%6f,\n',...
    precision_counter,...
    Precision_array{preci}(precision_counter,1),...
    Precision_array{preci}(precision_counter,2),...
    Precision_array{preci}(precision_counter,3),...
    sum(Precision_array{preci}(precision_counter,:)),...
    Precision_array{preci}(precision_counter,2) / (Precision_array{preci}(precision_counter,1) + Precision_array{preci}(precision_counter,2)));
end

fprintf(fid_final2,'\n\n\n\n');
preci = 2;
fprintf (fid_final2,'%s,,\n','Assessed with replicate-specific threshold');
fprintf (fid_final2,'%s,%s,%s,%s,%s,%s,\n',... %header for OutputGaus output
  'Interaction observed in at least N replicates',...
  'Number of FP interactions',...
  'Number of TP interactions',...
  'Number of novel interactions',...
  'Number of total interactions',...
  'Precision %'); %Write Header
for precision_counter=1:(number_of_replicates*number_of_channels)
  fprintf (fid_final2,'%6f,%6f,%6f,%6f,%6f,%6f,\n',...
    precision_counter,...
    Precision_array{preci}(precision_counter,1),...
    Precision_array{preci}(precision_counter,2),...
    Precision_array{preci}(precision_counter,3),...
    sum(Precision_array{preci}(precision_counter,:)),...
    Precision_array{preci}(precision_counter,2) / (Precision_array{preci}(precision_counter,1) + Precision_array{preci}(precision_counter,2)));
end
fclose(fid_final2);





